{"ast":null,"code":"import _objectSpread from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kiwonkim/Downloads/react-portfolio/src/components/Portfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\nexport default function Portfolio() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      goal = _useState2[0],\n      setGoal = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rendering = _useState4[0],\n      setRendering = _useState4[1];\n\n  var addTask = function addTask() {\n    firebase.firestore().collection('tasks').add({\n      goal: goal,\n      moment: moment().format('YYYY-MM-DD, h:mm:ss')\n    }).then(function () {\n      setGoal('');\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.firestore().collection('tasks').onSnapshot(function (snapshot) {\n      var newRendering = snapshot.docs.map(function (doc) {\n        return _objectSpread({\n          id: doc.id\n        }, doc.data());\n      });\n      console.log(newRendering);\n      setRendering(newRendering);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"\\uCD94\\uAC00\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/add_portfolio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"\\uCD94\\uAC00\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"\\uC57D\\uB825\"), rendering.sort(function (a, b) {\n    return a.goal - b.goal;\n  }).map(function (r, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, r.goal), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, r.moment));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summaryBorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"\\uBAA9\\uD45C: \\uCD94\\uAC00\\uD558\\uAE30\\uC5D0\\uC11C \\uAE00\\uC368\\uC11C \\uC5EC\\uAE30\\uC5D0 \\uAE00\\uC4F0\\uAE30\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setGoal(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Setting Goal\")));\n}","map":{"version":3,"sources":["/Users/kiwonkim/Downloads/react-portfolio/src/components/Portfolio.js"],"names":["React","useState","useEffect","Link","moment","firebase","Portfolio","goal","setGoal","rendering","setRendering","addTask","firestore","collection","add","format","then","unsubscribe","onSnapshot","snapshot","newRendering","docs","map","doc","id","data","console","log","sort","a","b","r","i","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MACzBM,IADyB;AAAA,MACnBC,OADmB;;AAAA,mBAEEP,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEzBQ,SAFyB;AAAA,MAEdC,YAFc;;AAIhC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBN,IAAAA,QAAQ,CACHO,SADL,GAEKC,UAFL,CAEgB,OAFhB,EAGKC,GAHL,CAGS;AACDP,MAAAA,IAAI,EAAEA,IADL;AAEDH,MAAAA,MAAM,EAAEA,MAAM,GAAGW,MAAT,CAAgB,qBAAhB;AAFP,KAHT,EAOKC,IAPL,CAOU,YAAM;AACRR,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KATL;AAUH,GAXD;;AAaAN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMe,WAAW,GAAGZ,QAAQ,CACvBO,SADe,GAEfC,UAFe,CAEJ,OAFI,EAGfK,UAHe,CAGJ,UAACC,QAAD,EAAc;AACtB,UAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,UAACC,GAAD,EAAS;AAC5C;AACIC,UAAAA,EAAE,EAAED,GAAG,CAACC;AADZ,WAEOD,GAAG,CAACE,IAAJ,EAFP;AAIH,OALoB,CAArB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAV,MAAAA,YAAY,CAACU,YAAD,CAAZ;AACH,KAZe,CAApB;AAcA,WAAO;AAAA,aAAMH,WAAW,EAAjB;AAAA,KAAP;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMKR,SAAS,CACLmB,IADJ,CACS,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACZ,WAAOD,CAAC,CAACtB,IAAF,GAASuB,CAAC,CAACvB,IAAlB;AACH,GAHJ,EAIIe,GAJJ,CAIQ,UAACS,CAAD,EAAIC,CAAJ,EAAU;AACX,wBACI;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACxB,IAAP,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKwB,CAAC,CAAC3B,MAAP,CAFJ,CADJ;AAMH,GAXJ,CANL,eAkBI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIAEI;AAAO,IAAA,QAAQ,EAAE,kBAAC6B,CAAD;AAAA,aAAOzB,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAExB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAlBJ,CADJ;AA0BH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { firebase } from '../firebase';\n\nexport default function Portfolio() {\n    const [goal, setGoal] = useState('');\n    const [rendering, setRendering] = useState([]);\n\n    const addTask = () => {\n        firebase\n            .firestore()\n            .collection('tasks')\n            .add({\n                goal: goal,\n                moment: moment().format('YYYY-MM-DD, h:mm:ss'),\n            })\n            .then(() => {\n                setGoal('');\n            });\n    };\n\n    useEffect(() => {\n        const unsubscribe = firebase\n            .firestore()\n            .collection('tasks')\n            .onSnapshot((snapshot) => {\n                const newRendering = snapshot.docs.map((doc) => {\n                    return {\n                        id: doc.id,\n                        ...doc.data(),\n                    };\n                });\n                console.log(newRendering);\n                setRendering(newRendering);\n            });\n\n        return () => unsubscribe();\n    }, []);\n\n    return (\n        <div>\n            <h1>추가하기</h1>\n            <button>\n                <Link to='/add_portfolio'>추가하기</Link>\n            </button>\n            <h1>약력</h1>\n            {rendering\n                .sort((a, b) => {\n                    return a.goal - b.goal;\n                })\n                .map((r, i) => {\n                    return (\n                        <div key={i}>\n                            <h3>{r.goal}</h3>\n                            <h6>{r.moment}</h6>\n                        </div>\n                    );\n                })}\n            <div className='summaryBorder'>\n                목표: 추가하기에서 글써서 여기에 글쓰기\n                <input onChange={(e) => setGoal(e.target.value)} />\n                <button onClick={addTask}>Setting Goal</button>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}