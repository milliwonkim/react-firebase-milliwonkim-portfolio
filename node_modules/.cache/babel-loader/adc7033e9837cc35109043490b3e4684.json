{"ast":null,"code":"import _classCallCheck from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kiwonkim/Downloads/react-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/kiwonkim/Downloads/react-portfolio/src/components/YoutubeChannel.js\";\nimport React, { Component, Suspense, lazy } from \"react\";\nimport Portal from \"Components/Modal/Portal\";\nimport Wrapper from \"Components/Wrapper\"; // Nav와 Footer가 있는 레이아웃임\n\nimport VideoModal from \"./VideoModal\";\nimport ImgSlider from \"./ImgSlider\";\nimport { youtubeData } from \"./data\"; // 유튭 데이터 \n\nimport { slides } from \"./slides\"; // 슬라이드에 쓰일 데이터\n\nimport \"./Epilogue.scss\";\nvar ImgCard = lazy(function () {\n  return import(\"./ImgCard\");\n});\n\nvar YoutubeChannel = /*#__PURE__*/function (_Component) {\n  _inherits(YoutubeChannel, _Component);\n\n  var _super = _createSuper(YoutubeChannel);\n\n  function YoutubeChannel(props) {\n    var _this;\n\n    _classCallCheck(this, YoutubeChannel);\n\n    _this = _super.call(this, props);\n\n    _this.setVideo = function (id) {\n      _this.setState({\n        videoID: id || \"\"\n      });\n    };\n\n    _this.isCurrentSlide = function (currentSlide) {\n      _this.setState(currentSlide);\n    };\n\n    _this.state = {\n      currentSlide: 1,\n      videoID: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(YoutubeChannel, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var videoID = this.state.videoID;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n        isWhiteBg: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \" // Nav bar \\uC18D\\uC131 \\uD504\\uB86D\\uC2A4\\uB85C \\uB118\\uAE34 \\uAC83\", videoID &&\n      /*#__PURE__*/\n      // videoID가 존재할때 영상이 모달로 열림\n      React.createElement(Portal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(VideoModal, {\n        onClose: function onClose() {\n          _this2.setVideo();\n        },\n        videoID: videoID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"epilogue-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ImgSlider, {\n        slides: slides,\n        currentSlide: this.isCurrentSlide,\n        onClick: function onClick(vid) {\n          _this2.setVideo(vid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list-container content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list-top content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"card-list-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, \"\\uC218\\uAC15\\uC0DD \\uD6C4\\uAE30 \\uBAA8\\uC74C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img-card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, youtubeData.map(function (el) {\n        return /*#__PURE__*/React.createElement(Suspense, {\n          fallback: /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 39\n            }\n          }, \"loading...\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(ImgCard, {\n          thumbnail: el.thumbnail,\n          videoDesc: el.videoDesc,\n          userName: el.name,\n          onClick: function onClick() {\n            _this2.setVideo(el.videoID);\n          },\n          key: el.videoID,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }));\n      }))))));\n    }\n  }]);\n\n  return YoutubeChannel;\n}(Component);\n\nexport default YoutubeChannel;","map":{"version":3,"sources":["/Users/kiwonkim/Downloads/react-portfolio/src/components/YoutubeChannel.js"],"names":["React","Component","Suspense","lazy","Portal","Wrapper","VideoModal","ImgSlider","youtubeData","slides","ImgCard","YoutubeChannel","props","setVideo","id","setState","videoID","isCurrentSlide","currentSlide","state","vid","map","el","thumbnail","videoDesc","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAA0C;;AAC1C,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,QAA5B,C,CAAsC;;AACtC,SAASC,MAAT,QAAuB,UAAvB,C,CAAmC;;AACnC,OAAO,iBAAP;AAEA,IAAMC,OAAO,GAAGP,IAAI,CAAC;AAAA,SAAM,OAAO,WAAP,CAAN;AAAA,CAAD,CAApB;;IAEMQ,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,QARmB,GAQR,UAACC,EAAD,EAAQ;AACjB,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEF,EAAE,IAAI;AADH,OAAd;AAGD,KAZkB;;AAAA,UAcnBG,cAdmB,GAcF,UAACC,YAAD,EAAkB;AACjC,YAAKH,QAAL,CAAcG,YAAd;AACD,KAhBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE,CADH;AAEXF,MAAAA,OAAO,EAAE;AAFE,KAAb;AAFiB;AAMlB;;;;6BAYQ;AAAA;;AAAA,UACCA,OADD,GACa,KAAKG,KADlB,CACCH,OADD;AAGP,0BACE,uDACE,oBAAC,OAAD;AAAS,QAAA,SAAS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFACGA,OAAO;AAAA;AAAM;AACZ,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACH,QAAL;AACD,SAHH;AAIE,QAAA,OAAO,EAAEG,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFJ,eAWE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEP,MADV;AAEE,QAAA,YAAY,EAAE,KAAKQ,cAFrB;AAGE,QAAA,OAAO,EAAE,iBAACG,GAAD,EAAS;AAChB,UAAA,MAAI,CAACP,QAAL,CAAcO,GAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,WAAW,CAACa,GAAZ,CAAgB,UAACC,EAAD;AAAA,4BACf,oBAAC,QAAD;AAAU,UAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,OAAD;AACE,UAAA,SAAS,EAAEA,EAAE,CAACC,SADhB;AAEE,UAAA,SAAS,EAAED,EAAE,CAACE,SAFhB;AAGE,UAAA,QAAQ,EAAEF,EAAE,CAACG,IAHf;AAIE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACZ,QAAL,CAAcS,EAAE,CAACN,OAAjB;AACD,WANH;AAOE,UAAA,GAAG,EAAEM,EAAE,CAACN,OAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADe;AAAA,OAAhB,CADH,CALF,CARF,CAXF,CADF,CADF;AA8CD;;;;EApE0Bf,S;;AAuE7B,eAAeU,cAAf","sourcesContent":["import React, { Component, Suspense, lazy } from \"react\";\nimport Portal from \"Components/Modal/Portal\";\nimport Wrapper from \"Components/Wrapper\"; // Nav와 Footer가 있는 레이아웃임\nimport VideoModal from \"./VideoModal\";\nimport ImgSlider from \"./ImgSlider\";\nimport { youtubeData } from \"./data\"; // 유튭 데이터 \nimport { slides } from \"./slides\"; // 슬라이드에 쓰일 데이터\nimport \"./Epilogue.scss\";\n\nconst ImgCard = lazy(() => import(\"./ImgCard\"));\n\nclass YoutubeChannel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSlide: 1,\n      videoID: \"\",\n    };\n  }\n\n  setVideo = (id) => {\n    this.setState({\n      videoID: id || \"\",\n    });\n  };\n\n  isCurrentSlide = (currentSlide) => {\n    this.setState(currentSlide);\n  };\n\n  render() {\n    const { videoID } = this.state;\n\n    return (\n      <>\n        <Wrapper isWhiteBg> // Nav bar 속성 프롭스로 넘긴 것\n          {videoID && ( // videoID가 존재할때 영상이 모달로 열림\n            <Portal>\n              <VideoModal\n                onClose={() => {\n                  this.setVideo();\n                }}\n                videoID={videoID}\n              />\n            </Portal>\n          )}\n          <div className=\"epilogue-container\">\n            <ImgSlider\n              slides={slides}\n              currentSlide={this.isCurrentSlide}\n              onClick={(vid) => {\n                this.setVideo(vid);\n              }}\n            />\n            <div className=\"card-list-container content\">\n              <div className=\"card-list-top content\">\n                <span className=\"card-list-title\">수강생 후기 모음</span>\n              </div>\n              <div className=\"divider\" />\n              <div className=\"img-card-list\">\n                {youtubeData.map((el) => (\n                  <Suspense fallback={<div>loading...</div>}>\n                    <ImgCard\n                      thumbnail={el.thumbnail}\n                      videoDesc={el.videoDesc}\n                      userName={el.name}\n                      onClick={() => {\n                        this.setVideo(el.videoID);\n                      }}\n                      key={el.videoID}\n                    />\n                  </Suspense>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default YoutubeChannel;"]},"metadata":{},"sourceType":"module"}